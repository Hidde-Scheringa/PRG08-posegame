import{DrawingUtils as F,FilesetResolver as T,HandLandmarker as b}from"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.18";(function(){const d=document.createElement("link").relList;if(d&&d.supports&&d.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const a of e)if(a.type==="childList")for(const r of a.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&o(r)}).observe(document,{childList:!0,subtree:!0});function i(e){const a={};return e.integrity&&(a.integrity=e.integrity),e.referrerPolicy&&(a.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?a.credentials="include":e.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function o(e){if(e.ep)return;e.ep=!0;const a=i(e);fetch(e.href,a)}})();document.addEventListener("DOMContentLoaded",function(){var v;const u=document.getElementById("webcamButton"),d=document.getElementById("checkAnwser"),i=document.getElementById("predictionResult"),o=document.getElementById("webcam"),e=document.getElementById("output_canvas"),a=e.getContext("2d"),r=new F(a);let h,f=!1,s,k=document.querySelector("#myimage");ml5.setBackend("webgl");const g=ml5.neuralNetwork({task:"classification",debug:!0}),x={model:"model/model.json",metadata:"model/model_meta.json",weights:"model/model.weights.bin"};g.load(x,()=>{console.log("het model is geladen!"),w()});function E(t){let n=[];for(let l of t)for(let c of l)n.push(c.x),n.push(c.y),n.push(c.z);return n}const L={"🤟":10,"🖖":2,"👎":20},O=[{question:"🤟 + 🤟",answer:"👎"},{question:"🖖 x 🤟",answer:"👎"},{question:"👎 - 🤟",answer:"🤟"},{question:"👎 : 🤟",answer:"🖖"},{question:"🤟 x 🖖",answer:"👎"},{question:"👎 : 🤟",answer:"🖖"}];let m=null;const p=O.filter(t=>L[t.answer]);function w(){const t=Math.floor(Math.random()*p.length);m=p[t],document.getElementById("sumDisplay").innerText=m.question+" = ?"}async function q(){if(!s||!s.landmarks||s.landmarks.length===0){console.warn("Geen handlandmarks beschikbaar!");return}const t=E([s.landmarks[0]]),n=await g.classify(t),l=n[0].label,c=n[0].confidence;console.log(`Gebaar herkend als: ${l} met een nauwkeurigheid van ${(c*100).toFixed(2)}%`),l===m.answer?(i.innerText="✅ Goed zo!",setTimeout(()=>{i.innerText="",w()},1500)):(i.innerText="❌ Probeer opnieuw!",setTimeout(()=>{i.innerText=""},1500))}const B=async()=>{const t=await T.forVisionTasks("https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0/wasm");h=await b.createFromOptions(t,{baseOptions:{modelAssetPath:"https://storage.googleapis.com/mediapipe-models/hand_landmarker/hand_landmarker/float16/1/hand_landmarker.task",delegate:"GPU"},runningMode:"VIDEO",numHands:2}),console.log("model loaded, you can start webcam"),u.addEventListener("click",n=>D()),d.addEventListener("click",n=>q())};async function D(){f=!0;try{const t=await navigator.mediaDevices.getUserMedia({video:!0,audio:!1});o.srcObject=t,o.addEventListener("loadeddata",()=>{e.style.width=o.videoWidth,e.style.height=o.videoHeight,e.width=o.videoWidth,e.height=o.videoHeight,document.querySelector(".videoView").style.height=o.videoHeight+"px",y()})}catch(t){console.error("Error accessing webcam:",t)}}async function y(){s=await h.detectForVideo(o,performance.now());let t=s.landmarks[0];if(t){let n=t[4];k.style.transform=`translate(${o.videoWidth-n.x*o.videoWidth}px, ${n.y*o.videoHeight}px)`}a.clearRect(0,0,e.width,e.height);for(let n of s.landmarks)r.drawConnectors(n,b.HAND_CONNECTIONS,{color:"#00FF00",lineWidth:5}),r.drawLandmarks(n,{radius:4,color:"#FF0000",lineWidth:2});f&&window.requestAnimationFrame(y)}(v=navigator.mediaDevices)!=null&&v.getUserMedia&&B()});
